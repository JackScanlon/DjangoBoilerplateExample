version: '3'

services:
  web:
    container_name: web
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile
    command: gunicorn app.wsgi:application --bind 0.0.0.0:8000
    expose:
      - '8000'
    env_file:
      ./env/app.compose.env
    volumes:
      - ./app/:/app/
      - staticfiles:/app/static/
      - mediafiles:/app/media/
    depends_on:
      - db
      - es
      - redis

  es:
    container_name: es
    image: elasticsearch:7.8.1
    ports:
      - '9200:9200'
      - '9300:9300'
    env_file:
      ./env/es.compose.env
    volumes:
      - esdata:/usr/share/elasticsearch/data

  redis:
    container_name: redis
    hostname: redis
    image: redis

  celery:
    container_name: celery
    restart: on-failure
    build:
      context: .
    command: celery -A app worker -l INFO -Q queue1
    volumes:
      - ./app:/app
    env_file:
      ./env/app.compose.env
    depends_on:
      - db
      - redis
      - web
  
  db:
    container_name: db
    image: postgres:14.4
    restart: on-failure
    ports:
      - '5432:5432'
    env_file:
      ./env/db.compose.env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    container_name: nginx
    build: ./nginx
    restart: on-failure
    volumes:
      - staticfiles:/app/static/
      - mediafiles:/app/media/
    ports:
      - '8008:80'
    depends_on:
      - web

volumes:
  esdata:
  postgres_data:
  staticfiles:
  mediafiles: